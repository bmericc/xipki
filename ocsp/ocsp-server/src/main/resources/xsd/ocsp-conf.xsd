<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (c) 2014 - 2015 Lijun Liao
-->
<xs:schema xmlns="http://xipki.org/pki/ocsp/conf/v2"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
  targetNamespace="http://xipki.org/pki/ocsp/conf/v2"
  elementFormDefault="qualified"
  version="1.0"
  jxb:version="2.0">
  <xs:annotation>
    <xs:appinfo>
      <jxb:schemaBindings>
        <jxb:package name="org.xipki.pki.ocsp.server.impl.jaxb"/>
      </jxb:schemaBindings>
    </xs:appinfo>
  </xs:annotation>
  <!-- CertStore -->
  <xs:element name="OCSPServer">
    <xs:complexType>
      <xs:all>
        <xs:element name="responders" type="respondersType"/>
        <xs:element name="signers" type="signersType"/>
        <xs:element name="stores" type="storesType"/>
        <xs:element name="datasources" type="datasourcesType" minOccurs="0"/>
        <xs:element name="requestOptions" type="requestOptionsType"/>
        <xs:element name="responseOptions" type="responseOptionsType"/>
        <xs:element name="auditOptions" type="auditOptionsType" minOccurs="0"/>
        <xs:element name="certprofileOptions" type="certprofileOptionsType" minOccurs="0"/>
      </xs:all>
    </xs:complexType>
  </xs:element>
  <!-- Responders -->
  <xs:complexType name="respondersType">
    <xs:sequence>
      <xs:element name="responder" type="responderType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="responderType">
    <xs:all>
      <xs:element name="servletPaths" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="servletPath" type="xs:string" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="mode" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Valid values are RFC2560 and RFC6960. If not present, then 
            RFC6960 mode will be applied.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inheritCaRevocation" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            Whether to consider certificate as revoked if CA is revoked.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="signer" type="xs:string"/>
      <xs:element name="request" type="xs:string"/>
      <xs:element name="response" type="xs:string"/>
      <xs:element name="audit" type="xs:string" minOccurs="0"/>
      <xs:element name="certprofile" type="xs:string" minOccurs="0"/>
      <xs:element name="stores">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="store" type="xs:string" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>    
  </xs:complexType>
  <!-- signers -->
  <xs:complexType name="signersType">
    <xs:sequence>
      <xs:element name="signer" type="signerType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="signerType">
    <xs:all>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="key" type="xs:string"/>
      <xs:element name="algorithms">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="algorithm" type="xs:string" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cert" type="fileOrValueType" minOccurs="0"/>
      <xs:element name="caCerts" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="caCert" type="fileOrValueType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <!-- requests -->
  <xs:complexType name="requestOptionsType">
    <xs:sequence>
      <xs:element name="requestOption" type="requestOptionType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestOptionType">
    <xs:all>
      <xs:element name="supportsHttpGet" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Whether to support HTTP GET for small request.
            The default is false.
          </xs:documentation>
        </xs:annotation>
      </xs:element>    
      <xs:element name="maxRequestSize" type="xs:int" minOccurs="0"/>
      <xs:element name="versions" type="versionsType" minOccurs="0"/>
      <xs:element name="nonce" type="nonceType" minOccurs="0"/>
      <xs:element name="signatureRequired" type="xs:boolean"/>
      <xs:element name="validateSignature" type="xs:boolean"/>
      <xs:element name="hashAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="algorithm" type="xs:string" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="certpathValidation" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="validationModel" type="validationModelType"/>
            <xs:element name="trustAnchors" type="certCollectionType"/>
            <xs:element name="certs" type="certCollectionType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:simpleType name="validationModelType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PKIX"/>
      <xs:enumeration value="CHAIN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="certCollectionType">
    <xs:choice>
      <xs:element name="dir" type="xs:string"/>
      <xs:element name="keystore">
        <xs:complexType>
          <xs:all>
            <xs:element name="type" type="xs:string"/>
            <xs:element name="keystore" type="fileOrValueType" minOccurs="0"/>
            <xs:element name="password" type="xs:string" minOccurs="0"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <!-- responses -->
  <xs:complexType name="responseOptionsType">
    <xs:sequence>
      <xs:element name="responseOption" type="responseOptionType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="responseOptionType">
    <xs:all>
      <xs:element name="embedCertsMode" type="embedCertsMode" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The default is SIGNER.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeRevReason" type="xs:boolean" minOccurs="0"/>
      <xs:element name="includeInvalidityDate" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Whether to include extension InvalidityDate in OCSP response.
            The default is true.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeCertHash" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Whether to include extension CertHash in OCSP response.
            The default is false. 
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="certhashAlgorithm" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            CertHash algorithm in the response, If this element is not present,
            the hash algorithm in the request will be applied.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cache" type="cacheType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="nonceType">
    <xs:all>
      <xs:element name="required" type="xs:boolean"/>
      <xs:element name="minLen" type="xs:int" minOccurs="0"/>
      <xs:element name="maxLen" type="xs:int" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="cacheType">
    <xs:all>
      <xs:element name="cacheMaxAge" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            max-age in seconds. Only useful for OCSP request sent by HTTP GET. 
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <!-- audit -->
  <xs:complexType name="auditOptionsType">
    <xs:sequence>
      <xs:element name="auditOption" type="auditOptionType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="auditOptionType">
    <xs:all>
      <xs:element name="certprofileMappings" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="mapping" type="mappingType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>    
  </xs:complexType>
  <xs:complexType name="mappingType">
    <xs:attribute name="from" type="xs:string"/>
    <xs:attribute name="to" type="xs:string"/>
  </xs:complexType>
  <!-- certprofile -->
  <xs:complexType name="certprofileOptionsType">
    <xs:sequence>
      <xs:element name="certprofileOption" type="certprofileOptionType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="certprofileOptionType">
    <xs:all>
       <xs:element name="includes" type="includesType" minOccurs="0"/>
       <xs:element name="excludes" type="excludesType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>    
  </xs:complexType>
  <!-- datasource -->
  <xs:complexType name="datasourcesType">
    <xs:sequence>
      <xs:element name="datasource" type="datasourceType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="datasourceType">
    <xs:sequence>
      <xs:element name="conf" type="fileOrPlainValueType"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <!-- certstatus store -->
  <xs:complexType name="storesType">
    <xs:sequence>
      <xs:element name="store" type="storeType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="storeType">
    <xs:all>
      <xs:element name="source">
        <xs:complexType>
          <xs:choice>
            <xs:element name="dbStore" type="dbStoreType"/>
            <xs:element name="crlStore" type="crlStoreType"/>
            <xs:element name="customStore" type="customStoreType"/>          
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="retentionInterval" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Days of certificates stored in certstore after expiration
            0 for no, -1 for forever. The default is 0 for CRL based
            store and -1 for database based store            
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unknownSerialAsGood" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Whether Certificate with known Issuer but unknown serial number
            is considered as good. The default is true for CRL based store
            and false for database based store
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeArchiveCutoff" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Whether to include extension archiveCutoff in OCSP response if 
            retentionInterval is not 0. The default is true.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeCrlID" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Whether to include extension crlID in OCSP response if 
            retentionInterval is not 0. It is ignored for database based
            store. The default is true for CRL based store. 
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>    
  </xs:complexType>
  <xs:complexType name="dbStoreType">
    <xs:all>
      <xs:element name="datasource" type="xs:string"/>
      <xs:element name="cacerts" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Which CAs should be included and excluded. If not present, then all CAs will be 
            considered.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="includes" type="includesFileOrValueType" minOccurs="0"/>
            <xs:element name="excludes" type="excludesFileOrValueType" minOccurs="0"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="crlStoreType">
    <xs:all>
      <xs:element name="crlFile" type="xs:string"/>
      <xs:element name="crlUrl" type="xs:string" minOccurs="0"/>
      <xs:element name="deltaCrlFile" type="xs:string" minOccurs="0"/>
      <xs:element name="useUpdateDatesFromCRL" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
             Where use thisUpdate and nextUpdate of CRL in the corresponding fields
             of OCSP response. The default value is true.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="caCert" type="fileOrValueType"/>
      <xs:element name="issuerCert" type="fileOrValueType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
             Required for indirect CRL
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="caRevoked" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
             Whether CA is revoked. The default is false.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="caRevocationTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
             When CA certificate is revoked. Required if caRevoked is true
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="certsDir" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
             Folder containing the DER-encoded certificates suffixed with ".der" and ".crt"
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="customStoreType">
    <xs:all>
      <xs:element name="className" type="xs:string">
        <xs:annotation>
          <xs:documentation>
             class that extends the Java class org.xipki.pki.ocsp.api.CertStatusStore
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="datasource" type="xs:string" minOccurs="0"/>
      <xs:element name="conf" type="xs:string"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="versionsType">
    <xs:sequence>
      <xs:element name="version" type="xs:int" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fileOrValueType">
    <xs:choice>
      <xs:element name="value" type="xs:base64Binary"/>
      <xs:element name="file" type="xs:string"/>
    </xs:choice>
  </xs:complexType>  
  <xs:complexType name="fileOrPlainValueType">
    <xs:choice>
      <xs:element name="value" type="xs:string"/>
      <xs:element name="file" type="xs:string"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="includesType">
    <xs:sequence>
      <xs:element name="include" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="excludesType">
    <xs:sequence>
      <xs:element name="exclude" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="includesFileOrValueType">
    <xs:sequence>
      <xs:element name="include" type="fileOrValueType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="excludesFileOrValueType">
    <xs:sequence>
      <xs:element name="exclude" type="fileOrValueType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="embedCertsMode">
    <xs:restriction base="xs:string">
       <xs:enumeration value="NONE" />
       <xs:enumeration value="SIGNER" />
       <xs:enumeration value="SIGNER_AND_CA" />
     </xs:restriction>
   </xs:simpleType>
</xs:schema>
